package com.moneywizzard.dao.impl;

import java.util.List;

import org.hibernate.Criteria;
import org.hibernate.HibernateException;
import org.hibernate.criterion.Restrictions;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Propagation;
import org.springframework.transaction.annotation.Transactional;

import com.moneywizzard.dao.PersonDao;
import com.moneywizzard.model.Person;
import com.moneywizzard.utils.MWUtils;


/**
 * DAO for table: Person.
 * @author autogenerated
 */
@Repository
public class PersonDaoImpl extends GenericHibernateDaoImpl<Person, String> implements PersonDao {

	/** Constructor method. */
	public PersonDaoImpl() {
		super(Person.class);
	}

	@Override
	@Transactional(readOnly = true, propagation = Propagation.REQUIRED)
	public Person authenticateUser(Person person) throws Exception{

		List<Person> persons = null;
		try {
			Criteria crit = getSession().createCriteria(getPersistentClass());

			if(!MWUtils.isNullOrBlank(person.getPassword())){
				crit.add(Restrictions.eq("password", person.getPassword()));
			}
			if(!MWUtils.isNullOrBlank(person.getEmailid())){
				crit.add(Restrictions.eq("emailid", person.getEmailid()));
			}

			persons = crit.list();
			if(persons.size()>0)
				return persons.get(0);
			else
			{
				return null;
			}

		} catch (HibernateException e) {
			throw e;
		}	

	}
	
	@Override
	@Transactional(readOnly = true, propagation = Propagation.REQUIRED)
	public List<Person> getByCriteria(Person person) throws Exception{
		
		try {
			Criteria crit = getSession().createCriteria(getPersistentClass());

			if(!MWUtils.isNullOrBlank(person.getEmailid())){
				crit.add(Restrictions.like("emailid", "%"+person.getEmailid()+"%"));
			}

			return crit.list();
			
		} catch (HibernateException e) {
			throw e;
		}	

	}
}

